{"ast":null,"code":"import axios from 'axios';\nimport { useAuthStore } from '@/store/auth';\nvar api = axios.create({\n  baseURL: \"http://127.0.0.1:5000\",\n  withCredentials: true,\n  // ðŸ”¥ Ensures cookies/auth headers are sent\n  headers: {\n    \"Content-Type\": \"application/json\" // âœ… Standard header\n  }\n});\napi.interceptors.request.use(function (config) {\n  var authStore = useAuthStore(); // Initialize Pinia store\n  var token = authStore.token; // Get token from Pinia store\n  if (token) {\n    config.headers.Authorization = \"Bearer \".concat(token);\n  }\n  return config;\n});\nexport default api;","map":{"version":3,"names":["axios","useAuthStore","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","authStore","token","Authorization","concat"],"sources":["/home/user/MAD2_project/housing-services-v2/src/api.js"],"sourcesContent":["import axios from 'axios';\nimport { useAuthStore } from '@/store/auth';\n\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:5000\",\n  withCredentials: true, // ðŸ”¥ Ensures cookies/auth headers are sent\n  headers: {\n    \"Content-Type\": \"application/json\", // âœ… Standard header\n  },\n});\n\n\napi.interceptors.request.use((config) => {\n  const authStore = useAuthStore();  // Initialize Pinia store\n  const token = authStore.token;  // Get token from Pinia store\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport default api;\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,cAAc;AAE3C,IAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI;EAAE;EACvBC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB,CAAE;EACtC;AACF,CAAC,CAAC;AAGFJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAACC,MAAM,EAAK;EACvC,IAAMC,SAAS,GAAGV,YAAY,CAAC,CAAC,CAAC,CAAE;EACnC,IAAMW,KAAK,GAAGD,SAAS,CAACC,KAAK,CAAC,CAAE;EAChC,IAAIA,KAAK,EAAE;IACTF,MAAM,CAACJ,OAAO,CAACO,aAAa,aAAAC,MAAA,CAAaF,KAAK,CAAE;EAClD;EACA,OAAOF,MAAM;AACf,CAAC,CAAC;AAEF,eAAeR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}